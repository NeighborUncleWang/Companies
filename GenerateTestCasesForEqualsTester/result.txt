@Test
public void t1() {
Object x = new Object();
Object y = x;
Object z = x;
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t2() {
Object x = new Object();
Object y = new Object();
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t3() {
Object x = new Object();
Object y = new Object();
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t4() {
Object x = new Object();
C y = new C(1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t5() {
Object x = new Object();
C y = new C(1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t6() {
Object x = new Object();
C y = new C(1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t7() {
Object x = new Object();
D y = new D(1, 1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t8() {
Object x = new Object();
D y = new D(1, 1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t9() {
Object x = new Object();
D y = new D(1, 1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t10() {
C x = new C(1);
Object y = new Object();
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t11() {
C x = new C(1);
Object y = new Object();
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t12() {
C x = new C(1);
Object y = new Object();
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t13() {
C x = new C(1);
C y = new C(1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t14() {
C x = new C(1);
C y = new C(1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t15() {
C x = new C(1);
C y = new C(1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t16() {
C x = new C(1);
D y = new D(1, 1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t17() {
C x = new C(1);
D y = new D(1, 1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t18() {
C x = new C(1);
D y = new D(1, 1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t19() {
D x = new D(1, 1);
Object y = new Object();
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t20() {
D x = new D(1, 1);
Object y = new Object();
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t21() {
D x = new D(1, 1);
Object y = new Object();
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t22() {
D x = new D(1, 1);
C y = new C(1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t23() {
D x = new D(1, 1);
C y = new C(1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t24() {
D x = new D(1, 1);
C y = new C(1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t25() {
D x = new D(1, 1);
D y = new D(1, 1);
Object z = new Object();
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t26() {
D x = new D(1, 1);
D y = new D(1, 1);
C z = new C(1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

@Test
public void t27() {
D x = new D(1, 1);
D y = new D(1, 1);
D z = new D(1, 1);
if (x.equals(y) && y.equals(z)) {
  assertTrue(x.equals(z));
}
}

